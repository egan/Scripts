#!/bin/bash

##
# gweather	-- obtain weather data using google api
#
# usage		-- gweather [-c|--current]|[-f|--forecast][LOCID]
#			-LOCID can be given as a string or zip code
#			-When unspecified, LOCID=$locid
#
# notes		-- designed for use from aliases
#
# written	-- 12 September, 2010 by Egan McComb
#
# revised	--
##

current="$HOME/bin/.current.xslt"
forecast="$HOME/bin/.forecast.xslt"
locid="Mountain+View" #"95616"

usage()
{
	echo "Usage: $(basename $0) [-c|--current]|[-f|--forecast] [LOCID]" >&2
	echo -e "\t-LOCID can be given as a string or zip code" >&2
	echo -e "\t-When unspecified, LOCID=$locid" >&2
}

convert()
{
	iconv -f ISO-8859-1 -t UTF-8
}

check()
{
	read -d "" reply
	if (( $(grep -c "$" <<< "$reply") == 1 ))
	then
		echo "Error: Invalid LOCID '$locid'" >&2
		exit 1
	else
		echo "$reply"
	fi
}

chkargs()
{
	if (( ! $# ))
	then
		echo "Error: Too few arguments" >&2
		usage
		exit $ERR_NARGS
	elif [[ $1 = "-f" ]] || [[ $1 = "--forecast" ]]
	then
		filter=$forecast
	elif [[ $1 = "-c" ]] || [[ $1 = "--current" ]]
	then
		filter=$current
	elif (( $# > 1 ))
	then
		echo "Error: Too many arguments" >&2
		usage
		exit $ERR_NARGS
	else
		echo "Error: Invalid arguments" >&2
		usage
		exit $ERR_VARGS
	fi
	if [[ ! -z "$2" ]]
	then
		locid="$2"
	fi
}

##----MAIN---##
chkargs "$@"
qurl="http://www.google.com/ig/api?weather=$locid"
curl -s "$qurl" | convert | xsltproc $filter - | check
