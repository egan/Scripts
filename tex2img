#!/bin/bash

##
# tex2img	-- quickly get png output from LaTeX code (for math)
#
# usage		-- tex2img [SIZE] STRING
#			-SIZE is standard LaTeX size command name
#			 without any substring 'size'
#			-Few measures preventing stupidity
#			-Single-quoting is recommended
#
# notes		-- requires tclip
#		-- uses $$ environment only
#
# todo		-- add safeguards
#
# written	-- 25 August, 2010 by Egan McComb
#
# revised	--
##

size="\LARGE"

usage()
{
	echo "Usage: $(basename $0) [SIZE] STRING" >&2
	echo -e "\t-SIZE is standard LaTeX size command name" >&2
	echo -e "\t without any substring 'size'" >&2
	echo -e "\t-Few measures preventing stupidity" >&2
	echo -e "\t are in place" >&2
	echo -e "\t-Single-quoting is recommended" >&2
}

compile()
{
	latex -interaction=batchmode "$@"
}

convert()
{
	dvipng -q -T tight -o "$@"
}

chkargs()
{
	if (( ! $# ))
	then
		echo "Error: Too few arguments" >&2
		usage
		exit $ERR_NARGS
	elif (( $# == 2 ))
	then
		case "$1" in
			tiny)
				size="\tiny";;
			script)
				size="\scriptsize";;
			footnote)
				size="\footnotesize";;
			small)
				size="\small";;
			normal)
				size="\normal";;
			large)
				size="\large";;
			Large)
				size="\Large";;
			LARGE)
				size="\LARGE";;
			huge)
				size="\huge";;
			Huge)
				size="\Huge";;
			*)
				echo "Error: Invalid argument '$1'" >&2
				usage
				exit $ERR_VARGS
		esac
		text="$2"
	elif (( $# > 2 ))
	then
		echo "Error: Too many arguments" >&2
		usage
		exit $ERR_NARGS
	else
		text="$@"
	fi
}

clean()
{
	rm -f "${file/%tex/aux}" "${file/%tex/dvi}" "${file/%tex/log}" "$file"
}

##----MAIN----##
chkargs "$@"
trap clean EXIT
file=$(mktemp $(basename $0).XXX.tex)
cat > $file <<- EOF
	\documentclass{article}
	\usepackage[american]{babel}
	\usepackage{amsmath}
	\usepackage{amssymb}
	\usepackage{amsfonts}
	\pagestyle{empty}
	\newcommand{\abs}[1]{\lvert#1\rvert}
	\newcommand{\s}{\Rightarrow}
	\begin{document}
	$size
	\$\$${text}\$\$
	\end{document}
	EOF
compile $file > /dev/null || { echo "Error: Unable to compile LaTeX code" >&2; clean; exit 2; }
convert ${file/%tex/png} ${file/%tex/dvi} > /dev/null || { echo "Errors occurred in conversion" >&2; clean; exit 2; }

echo "${file/%tex/png}" | tclip

exit 0
