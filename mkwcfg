#!/bin/bash

##
# mkwcfg -- creates wireless network profile
#
# usage -- mkwcfg ESSID [TYPE] [KEY]
#
# written -- 1 January, 2011 by Greg Dwulet
#
# revised -- 6 July, 2011 by Egan McComb
##

ERR_NARGS=3
ERR_VARGS=5

IWLIST="sudo iwlist wlan0 scan | piwlist.py -n"
NETDIR="/etc/network.d"

usage()
{
	echo "Usage: $(basename $0) ESSID [wep|wpa] [KEY]" >&2
	echo -e "\t-Will detect network type and prompt" >&2
	echo -e "\t for a key if given only one argument" >&2
}

chkargs()
{
	if [ -z "$1" ]
	then
		echo "Error: Too few arguments" >&2
		usage
		exit $ERR_NARGS
	elif [ $# -gt 3 ]
	then
		echo "Error: Too many arguments" >&2
		usage
		exit $ERR_NARGS
	fi
}

doargs()
{
	if [ $# -eq 1 ]
	then
		if $(grep -q "$1" <<< "$IWSCAN")
		then
			ESSID="$1"
			FILE="$NETDIR/$ESSID-wireless"
			if $(! grep -q "$ESSID|Open" <<< "$IWSCAN")
			then
				IWSCAN=$(grep -m 1 "$ESSID" <<< "$IWSCAN")
				TYPE=$(cut -d "|" -f 5 <<< "$IWSCAN" | cut -d " " -f 1 | tr "[A-Z]" "[a-z]")
				echo -n "Please enter $TYPE key for '$ESSID' network: "
				read KEY

			fi
		else
			echo "Error: Unknown wireless network '$1'" >&2
			usage
			exit $ERR_VARGS
		fi
	elif [ $# -eq 2 ]
	then
		echo "Error: Incorrect arguments" >&2
		usage
		exit $ERR_VARGS
	else
		if [ $2 != "wep" ] && [ $2 != "wpa" ]
		then
			echo "Error: Invalid network type '$2'" >&2
			usage
			exit $ERR_VARGS
		else
			TYPE=$2
			KEY="$3"
		fi
		if $(grep -q "$1" <<< "$IWSCAN")
		then
			ESSID="$1"
			FILE="$NETDIR/$ESSID-wireless"
		else
			echo "Error: Unknown wireless network '$1'" >&2
			usage
			exit $ERR_NARGS
		fi
	fi
}

makeprofile()
{
	if [ ! -e "$FILE" ]
	then
		cp $NETDIR/examples/wireless-$TYPE "$FILE"
		editprofile "$ESSID" $TYPE "$KEY"
	else
		echo "Warning: File exits, doing nothing" >&2
	fi
}

editprofile()
{
	sed -i "s/MyNetwork/$ESSID/" "$FILE"
	if [ $TYPE = "wep" ]
	then
		sed -i "s/123456789/$KEY/" "$FILE"
	elif [ $TYPE = "wpa" ]
	then
		sed -i "s/WirelessKey/$KEY/" "$FILE"
	fi
	echo "DHCP_TIMEOUT='3000'" >> "$FILE"
}

##----MAIN----##
if [ $EUID != "0" ]
then
	echo "Error: Must be root"
exit 1
fi

chkargs "$@"
IWSCAN=$(eval $IWLIST)
doargs "$@"
makeprofile

exit 0
