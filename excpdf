#!/bin/bash

##
# excpdf  -- remove pages from pdfs with ghostscript
#
# usage   -- excpdf PAGERANGE INFILE OUTFILE
#         -- PAGERANGE is given with ranges
#            e.g. 3-5:7:9-15 keeps those pages
#         -- Pages must be in numerical order
#
# notes   -- requires catpdf
#
# written -- 19 December, 2011 by Egan McComb
#
# revised --
##

usage()
{
	echo "Usage: $(basename $0) PAGERANGE INFILE OUTFILE" >&2
	echo -e "\t-PAGERANGE is given with ranges" >&2
	echo -e "\t e.g. 3-5:7:9-15 keeps those pages" >&2
	echo -e "\t-Pages must be in numerical order" >&2
}

trim()
{
	tr ":\-," "\n"
}

writepdf()
{
	gs -dBATCH -dNOPAUSE -q -sDEVICE=pdfwrite -dFirstPage=${subrange[0]} -dLastPage=${subrange[-1]} "$@" &> /dev/null
}

chkargs()
{
	if (( $# != 3 ))
	then
		echo "Error: Wrong number of arguments" >&2
		usage
		exit $ERR_NARGS
	fi
	chkfile "$2" && in="$2"
	out="$3"
	if grep -q [^[:digit:]:-] <<< "$1"
	then
		echo "Error: Invalid page range syntax" >&2
		usage
		exit $ERR_VARGS
	elif ! trim <<< $1 | sort -nC || [[ ! -z "$(trim <<< $1 | uniq -d)" ]]
	then
		echo "Error: Invalid page range collation" >&2
		usage
		exit $ERR_VARGS
	fi
}

chkfile()
{
	if [[ ! -f "$1" ]] || ! grep -q "PDF" <<< $(file "$1")
	then
		echo "Error: Invalid input file '$1'" >&2
		exit $ERR_VARGS
	fi
}

range()
{
	IFS=":"
	ranges=($@)
	tfiles=()
	for range in ${ranges[@]}
	do
		if (( $(awk 'BEGIN { FS="-"} ; { print NF }' <<< $range) > 2 ))
		then
			echo "Error: Invalid subrange '$range'" >&2
			usage
			exit $ERR_VARGS
		fi
		IFS="-"
		subrange=(${range[@]})
		tfiles[${#tfiles[@]}]=$(mktemp)
		IFS=" "
		writepdf -sOutputFile="${tfiles[-1]}" "$in" || { echo "Errors occurred!" >&2; exit 1; }
	done
	if (( ${#tfiles[@]} > 1 ))
	then
		catpdf ${tfiles[@]} "$out"
		rm ${tfiles[@]}
	else
		if [[ -f "$out" ]]
		then
			echo "Warning: Output file exists" >&2
			echo -n "Continue? [y/N] " >&2
			read response
			if ! userbool.sh $response
			then
				echo "Aborting..." >&2
				exit 1
			else
				echo "Continuing..." >&2
			fi
		fi
		mv ${tfiles[@]} "$out"
	fi
}

##----MAIN----##
chkargs "$@"
range $1

exit 0
